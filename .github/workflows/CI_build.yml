name: CI_build

on: [push, pull_request]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_platform: [x64, x86, ARM64]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Add nmake
      if: matrix.build_platform == 'ARM64'
      uses: ilammy/msvc-dev-cmd@v1
      with:
          arch: amd64_arm64

    - name: Add nmake
      if: matrix.build_platform == 'x64' || matrix.build_platform == 'x86'
      uses: ilammy/msvc-dev-cmd@v1
      with:
          arch: ${{ matrix.build_platform }}

    - name: nmake libcurl
      working-directory: curl/winbuild
      run: |
           nmake /f Makefile.vc mode=dll vc=15 RTLIBCFG=static           MACHINE="${{ matrix.build_platform }}"
           nmake /f Makefile.vc mode=dll vc=15 RTLIBCFG=static DEBUG=yes MACHINE="${{ matrix.build_platform }}"

    - name: MSBuild of GUP exe
      working-directory: vcproj
      run: |
           msbuild GUP.sln /m /p:configuration="Release" /p:platform="${{ matrix.build_platform }}"
           msbuild GUP.sln /m /p:configuration="Debug"   /p:platform="${{ matrix.build_platform }}"

    - name: Archive artifacts for x64
      if: matrix.build_platform == 'x64'
      uses: actions/upload-artifact@v3
      with:
          name: gup_exe_x64
          path: bin64\

    - name: Archive artifacts for x86
      if: matrix.build_platform == 'x86'
      uses: actions/upload-artifact@v3
      with:
          name: gup_exe_x86
          path: bin\

    - name: Archive artifacts for ARM64
      if: matrix.build_platform == 'ARM64'
      uses: actions/upload-artifact@v3
      with:
          name: gup_exe_arm64
          path: binarm64\
